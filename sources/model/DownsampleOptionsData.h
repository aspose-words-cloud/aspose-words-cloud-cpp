/**
 * Aspose.Words for Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * DownsampleOptionsData.h
 *
 * Container class for Downsample options
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_DownsampleOptionsData_H_
#define IO_SWAGGER_CLIENT_MODEL_DownsampleOptionsData_H_


#include "../ModelBase.h"


namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Container class for Downsample options
/// </summary>
class  DownsampleOptionsData
    : public ModelBase
{
public:
    DownsampleOptionsData();
    virtual ~DownsampleOptionsData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DownsampleOptionsData members

    /// <summary>
    /// Specifies whether images should be downsampled.
    /// </summary>
    bool isDownsampleImages() const;
    bool downsampleImagesIsSet() const;
    void unsetDownsampleImages();
    void setDownsampleImages(bool value);
    /// <summary>
    /// Specifies the resolution in pixels per inch which the images should be downsampled to.
    /// </summary>
    int32_t getResolution() const;
    bool resolutionIsSet() const;
    void unsetResolution();
    void setResolution(int32_t value);
    /// <summary>
    /// Specifies the threshold resolution in pixels per inch. If resolution of an image in the document is less than threshold value,  the downsampling algorithm will not be applied. A value of 0 means the threshold check is not used and all images that can be reduced in size are downsampled.
    /// </summary>
    int32_t getResolutionThreshold() const;
    bool resolutionThresholdIsSet() const;
    void unsetResolutionThreshold();
    void setResolutionThreshold(int32_t value);

protected:
    bool m_DownsampleImages;
    bool m_DownsampleImagesIsSet;
    int32_t m_Resolution;
    bool m_ResolutionIsSet;
    int32_t m_ResolutionThreshold;
    bool m_ResolutionThresholdIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_DownsampleOptionsData_H_ */
