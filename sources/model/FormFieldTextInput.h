/**
 * Aspose.Words for Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * FormFieldTextInput.h
 *
 * FormField text input element
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_FormFieldTextInput_H_
#define IO_SWAGGER_CLIENT_MODEL_FormFieldTextInput_H_


#include "FormField.h"
#include <cpprest/details/basic_types.h>
#include "WordsApiLink.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// FormField text input element
/// </summary>
class  FormFieldTextInput
    : public FormField
{
public:
    FormFieldTextInput();
    virtual ~FormFieldTextInput();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FormFieldTextInput members

    /// <summary>
    /// Maximum length for the text field. Zero when the length is not limited.
    /// </summary>
    int32_t getMaxLength() const;
    bool maxLengthIsSet() const;
    void unsetMaxLength();
    void setMaxLength(int32_t value);
    /// <summary>
    /// Gets or sets the default string or a calculation expression of a text form field. 
    /// </summary>
    utility::string_t getTextInputDefault() const;
    bool textInputDefaultIsSet() const;
    void unsetTextInputDefault();
    void setTextInputDefault(utility::string_t value);
    /// <summary>
    /// Returns or sets the text formatting for a text form field.
    /// </summary>
    utility::string_t getTextInputFormat() const;
    bool textInputFormatIsSet() const;
    void unsetTextInputFormat();
    void setTextInputFormat(utility::string_t value);
    /// <summary>
    /// Gets or sets the type of a text form field.
    /// </summary>
    utility::string_t getTextInputType() const;
    bool textInputTypeIsSet() const;
    void unsetTextInputType();
    void setTextInputType(utility::string_t value);

protected:
    int32_t m_MaxLength;
    bool m_MaxLengthIsSet;
    utility::string_t m_TextInputDefault;
    bool m_TextInputDefaultIsSet;
    utility::string_t m_TextInputFormat;
    bool m_TextInputFormatIsSet;
    utility::string_t m_TextInputType;
    bool m_TextInputTypeIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_FormFieldTextInput_H_ */
