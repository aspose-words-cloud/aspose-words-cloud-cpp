/**
 * Aspose.Words for Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PdfDigitalSignatureDetailsData.h
 *
 * container class for details of digital signature
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_PdfDigitalSignatureDetailsData_H_
#define IO_SWAGGER_CLIENT_MODEL_PdfDigitalSignatureDetailsData_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// container class for details of digital signature
/// </summary>
class  PdfDigitalSignatureDetailsData
    : public ModelBase
{
public:
    PdfDigitalSignatureDetailsData();
    virtual ~PdfDigitalSignatureDetailsData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PdfDigitalSignatureDetailsData members

    /// <summary>
    /// certificate&#39;s filename using for signing
    /// </summary>
    utility::string_t getCertificateFilename() const;
    bool certificateFilenameIsSet() const;
    void unsetCertificateFilename();
    void setCertificateFilename(utility::string_t value);
    /// <summary>
    /// hash algorithm
    /// </summary>
    utility::string_t getHashAlgorithm() const;
    bool hashAlgorithmIsSet() const;
    void unsetHashAlgorithm();
    void setHashAlgorithm(utility::string_t value);
    /// <summary>
    /// location of the signing
    /// </summary>
    utility::string_t getLocation() const;
    bool locationIsSet() const;
    void unsetLocation();
    void setLocation(utility::string_t value);
    /// <summary>
    /// reason for the signing
    /// </summary>
    utility::string_t getReason() const;
    bool reasonIsSet() const;
    void unsetReason();
    void setReason(utility::string_t value);
    /// <summary>
    /// date of the signing
    /// </summary>
    utility::datetime getSignatureDate() const;
    bool signatureDateIsSet() const;
    void unsetSignatureDate();
    void setSignatureDate(utility::datetime value);

protected:
    utility::string_t m_CertificateFilename;
    bool m_CertificateFilenameIsSet;
    utility::string_t m_HashAlgorithm;
    bool m_HashAlgorithmIsSet;
    utility::string_t m_Location;
    bool m_LocationIsSet;
    utility::string_t m_Reason;
    bool m_ReasonIsSet;
    utility::datetime m_SignatureDate;
    bool m_SignatureDateIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_PdfDigitalSignatureDetailsData_H_ */
