/**
 * Aspose.Words for Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Document.h
 *
 * Represents Words document DTO.
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_Document_H_
#define IO_SWAGGER_CLIENT_MODEL_Document_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "Link.h"
#include "DocumentProperties.h"
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Represents Words document DTO.
/// </summary>
class  Document
    : public ModelBase
{
public:
    Document();
    virtual ~Document();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Document members

    /// <summary>
    /// A list of links that originate from this document.
    /// </summary>
    std::vector<std::shared_ptr<Link>>& getLinks();
    bool linksIsSet() const;
    void unsetLinks();
    void setLinks(std::vector<std::shared_ptr<Link>> value);
    /// <summary>
    /// Gets the name of the file.
    /// </summary>
    utility::string_t getFileName() const;
    bool fileNameIsSet() const;
    void unsetFileName();
    void setFileName(utility::string_t value);
    /// <summary>
    /// Gets the original format of the document.
    /// </summary>
    utility::string_t getSourceFormat() const;
        void setSourceFormat(utility::string_t value);
    /// <summary>
    /// Returns true if the document is encrypted and requires a password to open. 
    /// </summary>
    bool isIsEncrypted() const;
        void setIsEncrypted(bool value);
    /// <summary>
    /// Returns true if the document contains a digital signature. This property merely informs that a  digital signature is present on a document, but it does not specify whether the signature is valid or not. 
    /// </summary>
    bool isIsSigned() const;
        void setIsSigned(bool value);
    /// <summary>
    /// Returns document properties.
    /// </summary>
    std::shared_ptr<DocumentProperties> getDocumentProperties() const;
    bool documentPropertiesIsSet() const;
    void unsetDocumentProperties();
    void setDocumentProperties(std::shared_ptr<DocumentProperties> value);

protected:
    std::vector<std::shared_ptr<Link>> m_Links;
    bool m_LinksIsSet;
    utility::string_t m_FileName;
    bool m_FileNameIsSet;
    utility::string_t m_SourceFormat;
        bool m_IsEncrypted;
        bool m_IsSigned;
        std::shared_ptr<DocumentProperties> m_DocumentProperties;
    bool m_DocumentPropertiesIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_Document_H_ */
