/**
 * Aspose.Words for Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * MetafileRenderingOptionsData.h
 *
 * container class for options of metafile rendering
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_MetafileRenderingOptionsData_H_
#define IO_SWAGGER_CLIENT_MODEL_MetafileRenderingOptionsData_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// container class for options of metafile rendering
/// </summary>
class  MetafileRenderingOptionsData
    : public ModelBase
{
public:
    MetafileRenderingOptionsData();
    virtual ~MetafileRenderingOptionsData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// MetafileRenderingOptionsData members

    /// <summary>
    /// Determines how EMF+ Dual metafiles should be rendered
    /// </summary>
    utility::string_t getEmfPlusDualRenderingMode() const;
    bool emfPlusDualRenderingModeIsSet() const;
    void unsetEmfPlusDualRenderingMode();
    void setEmfPlusDualRenderingMode(utility::string_t value);
    /// <summary>
    /// Gets or sets a value determining whether or not the raster operations should be emulated.             
    /// </summary>
    bool isEmulateRasterOperations() const;
    bool emulateRasterOperationsIsSet() const;
    void unsetEmulateRasterOperations();
    void setEmulateRasterOperations(bool value);
    /// <summary>
    /// Determines how metafile images should be rendered
    /// </summary>
    utility::string_t getRenderingMode() const;
    bool renderingModeIsSet() const;
    void unsetRenderingMode();
    void setRenderingMode(utility::string_t value);
    /// <summary>
    /// Determines how WMF metafiles with embedded EMF metafiles should be rendered
    /// </summary>
    bool isUseEmfEmbeddedToWmf() const;
    bool useEmfEmbeddedToWmfIsSet() const;
    void unsetUseEmfEmbeddedToWmf();
    void setUseEmfEmbeddedToWmf(bool value);

protected:
    utility::string_t m_EmfPlusDualRenderingMode;
    bool m_EmfPlusDualRenderingModeIsSet;
    bool m_EmulateRasterOperations;
    bool m_EmulateRasterOperationsIsSet;
    utility::string_t m_RenderingMode;
    bool m_RenderingModeIsSet;
    bool m_UseEmfEmbeddedToWmf;
    bool m_UseEmfEmbeddedToWmfIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_MetafileRenderingOptionsData_H_ */
