/**
 * Aspose.Words for Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CompareData.h
 *
 * Container class for compare documents
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_CompareData_H_
#define IO_SWAGGER_CLIENT_MODEL_CompareData_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Container class for compare documents
/// </summary>
class  CompareData
    : public ModelBase
{
public:
    CompareData();
    virtual ~CompareData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CompareData members

    /// <summary>
    /// Path to document to compare at the server.
    /// </summary>
    utility::string_t getComparingWithDocument() const;
    bool comparingWithDocumentIsSet() const;
    void unsetComparingWithDocument();
    void setComparingWithDocument(utility::string_t value);
    /// <summary>
    /// Initials of the author to use for revisions.
    /// </summary>
    utility::string_t getAuthor() const;
    bool authorIsSet() const;
    void unsetAuthor();
    void setAuthor(utility::string_t value);
    /// <summary>
    /// The date and time to use for revisions.             
    /// </summary>
    utility::datetime getDateTime() const;
    bool dateTimeIsSet() const;
    void unsetDateTime();
    void setDateTime(utility::datetime value);

protected:
    utility::string_t m_ComparingWithDocument;
    bool m_ComparingWithDocumentIsSet;
    utility::string_t m_Author;
    bool m_AuthorIsSet;
    utility::datetime m_DateTime;
    bool m_DateTimeIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_CompareData_H_ */
