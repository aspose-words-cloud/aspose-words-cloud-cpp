/**
 * Aspose.Words for Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PageStatData.h
 *
 * Container for the page&#39;s statistical data
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_PageStatData_H_
#define IO_SWAGGER_CLIENT_MODEL_PageStatData_H_


#include "../ModelBase.h"

#include "FootnotesStatData.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Container for the page&#39;s statistical data
/// </summary>
class  PageStatData
    : public ModelBase
{
public:
    PageStatData();
    virtual ~PageStatData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PageStatData members

    /// <summary>
    /// Page number
    /// </summary>
    int32_t getPageNumber() const;
        void setPageNumber(int32_t value);
    /// <summary>
    /// Total count of words in the page
    /// </summary>
    int32_t getWordCount() const;
        void setWordCount(int32_t value);
    /// <summary>
    /// Total count of paragraphs in the page
    /// </summary>
    int32_t getParagraphCount() const;
        void setParagraphCount(int32_t value);
    /// <summary>
    /// Detailed statistics of footnotes
    /// </summary>
    std::shared_ptr<FootnotesStatData> getFootnotesStatData() const;
    bool footnotesStatDataIsSet() const;
    void unsetFootnotesStatData();
    void setFootnotesStatData(std::shared_ptr<FootnotesStatData> value);

protected:
    int32_t m_PageNumber;
        int32_t m_WordCount;
        int32_t m_ParagraphCount;
        std::shared_ptr<FootnotesStatData> m_FootnotesStatData;
    bool m_FootnotesStatDataIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_PageStatData_H_ */
