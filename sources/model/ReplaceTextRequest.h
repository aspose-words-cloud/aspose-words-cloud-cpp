/**
 * Aspose.Words for Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.9.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * ReplaceTextRequest.h
 *
 * Class for document replace text request building.
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_ReplaceTextRequest_H_
#define IO_SWAGGER_CLIENT_MODEL_ReplaceTextRequest_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Class for document replace text request building.
/// </summary>
class  ReplaceTextRequest
    : public ModelBase
{
public:
    ReplaceTextRequest();
    virtual ~ReplaceTextRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ReplaceTextRequest members

    /// <summary>
    /// Old text value (or regex pattern ) to replace.
    /// </summary>
    utility::string_t getOldValue() const;
    bool oldValueIsSet() const;
    void unsetOldValue();
    void setOldValue(utility::string_t value);
    /// <summary>
    /// New text value to replace by.
    /// </summary>
    utility::string_t getNewValue() const;
    bool newValueIsSet() const;
    void unsetNewValue();
    void setNewValue(utility::string_t value);
    /// <summary>
    /// Flag, true means the search is case-sensitive; false means the search is not case-sensitive.
    /// </summary>
    bool isIsMatchCase() const;
        void setIsMatchCase(bool value);
    /// <summary>
    /// Flag, means that only whole word matched are replaced.
    /// </summary>
    bool isIsMatchWholeWord() const;
        void setIsMatchWholeWord(bool value);
    /// <summary>
    /// Flag, means that  contains regex expression.
    /// </summary>
    bool isIsOldValueRegex() const;
        void setIsOldValueRegex(bool value);

protected:
    utility::string_t m_OldValue;
    bool m_OldValueIsSet;
    utility::string_t m_NewValue;
    bool m_NewValueIsSet;
    bool m_IsMatchCase;
        bool m_IsMatchWholeWord;
        bool m_IsOldValueRegex;
    };

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_ReplaceTextRequest_H_ */
